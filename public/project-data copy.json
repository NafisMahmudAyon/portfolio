[
  {
    "id": 1,
    "created_at": "2024-02-25T02:16:06+00:00",
    "title": "Landing Page UI",
    "slug": "landing-page-ui",
    "short_description": "Landing Page UI is a React component library designed for creating visually appealing and responsive landing pages. The library emphasizes clean design, ease of use, and flexibility, allowing developers to create unique layouts that align with their branding and marketing goals.",
    "project_type": [
      "Web Development"
    ],
    "project_status": "I",
    "date_started": "2024-02-25",
    "date_complete": "2024-08-26",
    "tech_use": [
      "React",
      "JavaScript",
      "HTML",
      "CSS",
      "Tailwind",
      "NextJS"
    ],
    "project_url": "https://ui.nafisbd.com/",
    "role": "Author",
    "client_name": null,
    "client_feedback": null,
    "key_features": [
      {
        "desc": "Quickly get started by installing the package with npm install landing-page-ui.",
        "title": "Ease of Installation"
      },
      {
        "desc": "Includes essential components like Accordions, Avatars, Cards, Grids, and more, to build comprehensive landing pages.",
        "title": "Wide Range of Components"
      },
      {
        "desc": "All components are designed to be fully responsive, ensuring a seamless user experience across different devices.",
        "title": "Responsive Design"
      },
      {
        "desc": "Offers flexibility with customizable properties, allowing developers to tailor the components to fit specific branding and design requirements.",
        "title": "Customizable Elements"
      },
      {
        "desc": "Includes a Theme Switcher hook to easily toggle between light and dark modes.",
        "title": "Theme Switching"
      },
      {
        "desc": "Components are optimized for performance, ensuring fast load times and smooth interactions.",
        "title": "Performance Optimized"
      },
      {
        "desc": "Components are designed to be used independently or together, providing flexibility in how they are integrated into projects.",
        "title": "Modular Structure"
      },
      {
        "desc": "Emphasizes a clean and modern design aesthetic, making it easy to create professional-looking landing pages.",
        "title": "Clean Design"
      }
    ],
    "blog": "# Landing Page UI: Craft Stunning Landing Pages with Ease\n\nLanding Page UI is a comprehensive React component library designed to streamline the creation of visually appealing and responsive landing pages. By integrating seamlessly with Tailwind CSS, this library offers a diverse range of UI components that cater to various design needs, enabling developers to craft captivating pages effortlessly.\n\n## Getting Started\n\nTo begin using Landing Page UI in your project, simply install the package via npm:\n\n```bash\nnpm install landing-page-ui\n```\n\n## Available Components\n\nLanding Page UI provides a rich set of components, each tailored to enhance user interface design. Here are some of the key components included in the library:\n\n### Accordion\nA vertically stacked set of expandable panels, ideal for displaying content in a collapsible format.\n\n### Avatar\nA graphical representation of a user or profile, commonly used to display user images or initials.\n\n### Badge\nA colored text element for labeling content, often used to display notifications or status indicators.\n\n### Block\nA flexible container for grouping content and enhancing layout structure.\n\n### Card\nA versatile content container used to group related information in a visually appealing way.\n\n### Circular Progress Bar\nDisplays progress in a circular format, often used for indicating task completion.\n\n### Divider\nA horizontal line for separating content sections, enhancing layout clarity.\n\n### Flex\nA layout component that simplifies the implementation of flexbox-based designs.\n\n### Grid\nA layout component for creating grid-based designs, ideal for structuring content.\n\n### Icon Button\nA button component with an integrated icon, enhancing user interaction with recognizable symbols.\n\n### Image\nA responsive image component for displaying visual content effectively.\n\n### Image Gallery\nShowcases a collection of images in an organized layout, perfect for portfolios or product displays.\n\n### Input\nA customizable input field for capturing user data.\n\n### Label\nA text component used for labeling input fields or providing additional context.\n\n### List\nA component for displaying items in a structured list format.\n\n### Progress Bar\nDisplays the completion status of a task or process, providing visual feedback on progress.\n\n### Tabs\nOrganizes and groups content into sections, allowing users to navigate between views or categories.\n\n### Table\nPresents data in a structured tabular format, making it easy to compare and analyze information.\n\n### Text\nA versatile text component for displaying various types of content.\n\n### TextArea\nAn input field for multi-line text input, suitable for collecting longer responses or comments.\n\n## Component Variations\n\nEach component comes with multiple variations, providing flexibility to match your design requirements. For instance, the Button component offers different styles, sizes, and color schemes to suit various use cases.\n\n## Live Documentation and Examples\n\nFor detailed documentation and live examples of each component, visit the official Landing Page UI website:\n\n[Landing Page UI Documentation](https://ui.nafisbd.com/)\n\nThis resource provides comprehensive guides and showcases to assist you in effectively implementing the components in your projects.\n\n## Conclusion\n\nLanding Page UI empowers developers to create beautiful and responsive landing pages efficiently. With its extensive range of components and seamless integration with React and Tailwind CSS, it serves as a valuable tool for enhancing web development workflows.\n\nElevate your design projects today with Landing Page UI!",
    "challenges_faced": null,
    "lessons_learned": null,
    "team_size": 1,
    "collaborators": null,
    "project_images": [
      "https://ui.nafisbd.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhero-img.14c847f7.png&w=3840&q=75"
    ],
    "project_videos": null,
    "documentation_links": "https://ui.nafisbd.com/install",
    "github_repo": "https://github.com/NafisMahmudAyon/landing-page-ui.git",
    "downloadable_resources": null,
    "updated_at": "2024-08-26T08:35:03",
    "tags": [
      "react",
      "npm-package",
      "ui-library",
      "landing-page",
      "frontend",
      "responsive",
      "components",
      "design-system",
      "web-development",
      "clean-design"
    ],
    "views_count": 508,
    "likes": 168,
    "comments": null,
    "description": [
      "Landing Page UI is a React component library designed for creating visually appealing and responsive landing pages. The library emphasizes clean design, ease of use, and flexibility, allowing developers to create unique layouts that align with their branding and marketing goals.",
      "2Landing Page UI is a React component library designed for creating visually appealing and responsive landing pages. The library emphasizes clean design, ease of use, and flexibility, allowing developers to create unique layouts that align with their branding and marketing goals.",
      "3Landing Page UI is a React component library designed for creating visually appealing and responsive landing pages. The library emphasizes clean design, ease of use, and flexibility, allowing developers to create unique layouts that align with their branding and marketing goals."
    ]
  },
  {
    "id": 2,
    "created_at": "2024-08-30T09:17:22.277+00:00",
    "title": "Blog-X UI",
    "slug": "blog-x-ui",
    "short_description": "Blog-X UI is a React component library designed for creating modern, responsive, and customizable blog interfaces. The library offers a range of components to help developers build visually appealing and feature-rich blogs.",
    "project_type": [
      "Web Development"
    ],
    "project_status": "I",
    "date_started": "2024-07-25",
    "date_complete": null,
    "tech_use": [
      "React",
      "JavaScript",
      "HTML",
      "CSS",
      "Tailwind",
      "NextJS"
    ],
    "project_url": "https://blog-x-ui.vercel.app/",
    "role": "Author",
    "client_name": "",
    "client_feedback": "",
    "key_features": [
      {
        "title": "Ease of Installation",
        "desc": "Quick setup with a straightforward installation process using npm or yarn."
      },
      {
        "title": "Blog-Specific Components",
        "desc": "Includes components like Post Previews, Author Profiles, Comment Sections, and more, tailored for building blog interfaces."
      },
      {
        "title": "Responsive Design",
        "desc": "Responsive design ensures that the blog looks great on all devices."
      },
      {
        "title": "Customizable Elements",
        "desc": "Easily customizable components allow developers to match the blogâ€™s style to their brand."
      },
      {
        "title": "Performance Optimized",
        "desc": "Optimized for performance to ensure fast loading times and smooth interactions."
      },
      {
        "title": "Modular Structure",
        "desc": "Components can be used independently or combined, offering flexibility in how they are integrated into the blog."
      },
      {
        "title": "Clean Design",
        "desc": "Clean and modern design principles make it easy to create professional and engaging blog pages."
      }
    ],
    "blog": "# Blog-X UI: Simplify Blog Development with Ready-to-Use Components\r\n\r\nBlog-X UI is a dedicated React component library crafted to simplify the creation of dynamic and visually appealing blog pages. Designed with flexibility and ease of use in mind, this library provides all the essential components needed to build engaging and user-friendly blog layouts.\r\n\r\n## Getting Started\r\n\r\nTo get started with Blog-X UI, install the library via npm:\r\n\r\n```bash\r\nnpm install blog-x-ui\r\n```\r\n\r\n## Available Components\r\n\r\nBlog-X UI offers a wide array of components tailored to meet the specific needs of blog development. Here's a breakdown of the key components:\r\n\r\n### Author\r\nDisplay the authorâ€™s name and profile information.\r\n\r\n### AuthorBio\r\nShowcase a detailed biography of the blog author.\r\n\r\n### Blog\r\nA container component for individual blog entries.\r\n\r\n### BlogAction\r\nProvide actionable elements like edit, delete, or save for blogs.\r\n\r\n### Category\r\nCategorize blogs with labels for better organization.\r\n\r\n### Content\r\nRender the main content of a blog post.\r\n\r\n### Date\r\nDisplay the publication or last modified date of a blog.\r\n\r\n### Excerpt\r\nShow a brief preview or summary of the blog content.\r\n\r\n### FeaturedImage\r\nHighlight a prominent image associated with the blog.\r\n\r\n### FeedbackCount\r\nShow feedback metrics like comments or shares.\r\n\r\n### Icon\r\nAdd visual appeal with customizable icons.\r\n\r\n### Likes\r\nDisplay the number of likes or reactions to a blog post.\r\n\r\n### Metainfo\r\nShow metadata like author, category, and publication date.\r\n\r\n### ReadMore\r\nInclude a button or link to expand truncated content.\r\n\r\n### RelatedPosts\r\nHighlight posts related to the current blog for increased engagement.\r\n\r\n### ShareButton\r\nEncourage content sharing across social media platforms.\r\n\r\n### SocialShare\r\nProvide integrated sharing options for various social media.\r\n\r\n### Tags\r\nTag blogs with keywords for improved discoverability.\r\n\r\n### Title\r\nRender the blog title prominently.\r\n\r\n### Upvotes\r\nDisplay and allow upvotes for blog posts.\r\n\r\n## Component Variations\r\n\r\nEach component in Blog-X UI is customizable and supports multiple variations, ensuring that it can fit seamlessly into any blog design. For example, the ShareButton component supports various styles and platform-specific icons.\r\n\r\n## Live Documentation and Examples\r\n\r\nFor detailed documentation and live examples of each component, visit the official Blog-X UI website:\r\n\r\n[Blog-X UI Documentation](https://blog-x.nafisbd.com/)\r\n\r\nExplore interactive examples and comprehensive guides to maximize the utility of the library in your projects.\r\n\r\n## Conclusion\r\n\r\nBlog-X UI is the ultimate toolkit for building modern, interactive, and responsive blogs. Its extensive range of components and customizable options makes it an invaluable resource for developers seeking to enhance their blog development process.\r\n\r\nElevate your blog projects with Blog-X UI and experience the simplicity of professional-grade components!\r\n",
    "challenges_faced": "",
    "lessons_learned": "",
    "team_size": 1,
    "collaborators": [],
    "project_images": [
      "https://blog-x-ui.vercel.app/Screenshot%202024-08-30%20135950.png",
      "https://blog-x-ui.vercel.app/Screenshot%202024-08-30%20140049.png"
    ],
    "project_videos": [],
    "documentation_links": [
      "https://blog-x-ui.vercel.app/"
    ],
    "github_repo": "https://github.com/NafisMahmudAyon/blog-x-ui",
    "downloadable_resources": [],
    "updated_at": "2024-08-30T09:56:15.802",
    "tags": [
      "react",
      "ui-library",
      "blog",
      "frontend",
      "responsive",
      "components",
      "web-development",
      "design-system",
      "clean-design"
    ],
    "views_count": null,
    "likes": null,
    "comments": null,
    "description": [
      "Blog-X UI is a React component library designed for creating modern",
      "responsive",
      "and customizable blog interfaces. The library offers a range of components to help developers build visually appealing and feature-rich blogs.",
      "With its modular structure and clean design",
      "Blog-X UI provides the tools needed to create professional blog pages that align with modern web standards.",
      "The library includes blog-specific components such as Post Previews",
      "Author Profiles",
      "Comment Sections",
      "and more",
      "all of which are fully responsive and customizable to fit various branding requirements."
    ]
  },
  {
    "id": 3,
    "created_at": "2024-08-30T14:38:08.32+00:00",
    "title": "Advanced Infinite Scroll",
    "slug": "advanced-infinite-scroll",
    "short_description": "Advanced Infinite Scroll is a React component library that provides versatile and customizable infinite scrolling capabilities. It allows seamless content loading and offers multiple configuration options, including scrolling direction, speed, and hover-paused behavior.",
    "project_type": [
      "Web Development",
      "UI Component"
    ],
    "project_status": "C",
    "date_started": "2024-07-01",
    "date_complete": null,
    "tech_use": [
      "React",
      "JavaScript",
      "HTML",
      "CSS",
      "Tailwind",
      "NextJS"
    ],
    "project_url": "https://advanced-infinite-scroll.vercel.app/",
    "role": "Author",
    "client_name": "",
    "client_feedback": "",
    "key_features": [
      {
        "title": "Multiple Scrolling Directions",
        "desc": "Supports both horizontal and vertical scrolling directions, offering flexibility in layout design."
      },
      {
        "title": "Hover-Paused Scrolling",
        "desc": "Allows pausing the scroll animation when the user hovers over the content, enhancing user interaction."
      },
      {
        "title": "Adjustable Scrolling Speed",
        "desc": "Configurable scrolling speed, enabling smooth or fast transitions based on user preference."
      },
      {
        "title": "Versatile Content Integration",
        "desc": "Easily integrate with various content types, such as images, links, and text."
      },
      {
        "title": "Performance Optimized",
        "desc": "Optimized for performance, ensuring smooth scrolling even with large datasets."
      },
      {
        "title": "Responsive Design",
        "desc": "Built-in responsive design, ensuring the component adapts to different screen sizes and devices."
      }
    ],
    "challenges_faced": "",
    "lessons_learned": "",
    "team_size": 1,
    "collaborators": [],
    "project_images": [],
    "project_videos": [],
    "documentation_links": [
      "https://advanced-infinite-scroll.vercel.app/"
    ],
    "github_repo": "https://github.com/NafisMahmudAyon/advanced-infinite-scroll",
    "downloadable_resources": [],
    "updated_at": "2024-08-30T14:38:08.32",
    "tags": [
      "react",
      "infinite-scroll",
      "ui-library",
      "web-development",
      "components",
      "responsive",
      "performance",
      "scroll-animation"
    ],
    "views_count": null,
    "likes": null,
    "comments": null,
    "description": [
      "\"Advanced Infinite Scroll is a React component library designed to provide versatile and customizable infinite scrolling capabilities.\"",
      "\"It allows seamless content loading and offers multiple configuration options",
      "including scrolling direction",
      "speed",
      "and hover-paused behavior.\"",
      "\"Built with performance in mind",
      "Advanced Infinite Scroll ensures smooth scrolling even with large datasets.\""
    ]
  },
  {
    "id": 4,
    "created_at": "2024-08-31T02:00:45.158+00:00",
    "title": "Aspect UI",
    "slug": "aspect-ui",
    "short_description": "Aspect UI is a React component library that provides a collection of reusable UI components. The library offers a wide range of components, such as buttons, inputs, modals, and more, that can be used to build modern web applications quickly and efficiently.",
    "project_type": [
      "Web Development",
      "UI Component"
    ],
    "project_status": "In Progress",
    "date_started": "2024-07-03",
    "date_complete": null,
    "tech_use": [
      "React",
      "JavaScript",
      "HTML",
      "CSS",
      "Tailwind",
      "NextJS"
    ],
    "project_url": "https://aspect-ui.vercel.app/",
    "role": "Author",
    "client_name": "",
    "client_feedback": "",
    "key_features": [
      {
        "title": "Seamless Integration",
        "desc": "Easily integrates with any React project, providing customizable image carousel functionality."
      },
      {
        "title": "Autoplay with Pause on Hover",
        "desc": "Supports autoplay with pause on hover, giving users control over the carousel behavior."
      },
      {
        "title": "Enhanced User Interaction",
        "desc": "Includes configurable options like pagination, arrows, and drag functionality for enhanced user interaction."
      },
      {
        "title": "Responsive Design",
        "desc": "Responsive breakpoints allow the carousel to adapt to different screen sizes, ensuring a consistent experience across devices."
      },
      {
        "title": "Customizable Appearance",
        "desc": "Allows developers to customize carousel appearance with options for arrows, gap, and pagination styles."
      },
      {
        "title": "Performance Optimized",
        "desc": "Optimized for performance, ensuring smooth transitions and quick load times."
      }
    ],
    "blog": "# Aspect UI: A Comprehensive React Component Library for Modern Web Development\n\nWhen building React applications, having a reliable and versatile component library is essential. **Aspect UI** is a modern React component library designed to streamline your development process. With a rich set of components, it empowers developers to create interactive and responsive user interfaces with ease.\n\n---\n\n## What is Aspect UI?\n\nAspect UI is an open-source React component library providing high-quality, reusable components. With a focus on flexibility, scalability, and aesthetics, itâ€™s an excellent choice for projects of any size, from simple websites to complex applications.\n\n---\n\n## Key Features\n\n- **Rich Component Library**: Offers a wide range of components to address various development needs.\n- **Customizable**: Tailor styles, properties, and behaviors to suit your project.\n- **Responsive Design**: Ensures your application looks great on all devices.\n- **Developer-Friendly API**: Simplifies component integration with an intuitive API.\n- **Lightweight and Fast**: Optimized for performance and quick load times.\n- **Theming Support**: Includes light/dark modes and custom theme options.\n\n---\n\n## Components List\n\n### General Components\n- **Accordion**: Collapsible panels to organize content.\n- **Alert**: Contextual messages for user notifications.\n- **Avatar**: Display user profiles with customizable avatars.\n- **BackToTop**: Smooth scroll-to-top functionality.\n\n### Navigation Components\n- **Breadcrumb**: Navigation trail for enhanced user experience.\n- **Navbar**: Create responsive and intuitive navigation bars.\n- **Sidebar**: Collapsible side navigation menus.\n\n### Input & Form Controls\n- **Button**: Interactive buttons with various styles.\n- **Checkbox**, **Radio**, **Switch**, **ToggleButton**: Handle user selections effortlessly.\n- **Input**: Flexible text input fields.\n- **DatePicker**: User-friendly date selection component.\n- **Textarea**: Multi-line input for text.\n\n### Display Components\n- **Card**: Styled containers for showcasing content.\n- **Carousel**: Dynamic sliders for images or content.\n- **CircularProgressBar**: Circular representation of progress.\n- **Image**: Responsive image rendering.\n- **Masonry**: Pinterest-style grid layouts.\n- **ProgressBar**: Sleek horizontal progress indicators.\n- **Skeleton**: Loading placeholders for improved UX.\n- **Spinner**: Elegant loading state indicators.\n- **Timeline**: Interactive chronological event displays.\n\n### Utility Components\n- **Divider**: Stylish content separators.\n- **Dropdown**: Interactive menus for navigation or options.\n- **Icon**: Add icons for enhanced visual communication.\n- **Modal**: Customizable pop-up windows.\n- **Pagination**: Navigate large datasets efficiently.\n- **Slider**: Numeric range sliders.\n- **Toast**: Brief notifications with animations.\n- **Tooltip**: Informative tooltips for elements.\n\n### Typography & Content\n\n- **Rating**: Star-based rating systems.\n- **Table**: Functional and responsive data tables.\n- **Tabs**: Organized navigation for grouped content.\n- **Typography**: Pre-defined text styles for consistency.\n- **Upload**: File upload support with progress tracking.\n\n### Counters and Metrics\n\n- **NumberCounter**: Dynamic animated counters for metrics.\n\n---\n\n## How to Get Started\n\n### Installation\n\nInstall Aspect UI in your React project using npm:\n\n```bash\nnpm install aspect-ui\n```\n\n### Example Usage\n\nHereâ€™s an example of the Button component in action:\n\n```jsx\nimport { Button } from 'aspect-ui';\n\nfunction App() {\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={() => alert('Button Clicked!')}>\n        Click Me\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n```",
    "challenges_faced": "",
    "lessons_learned": "",
    "team_size": 1,
    "collaborators": [],
    "project_images": [],
    "project_videos": [],
    "documentation_links": [
      "https://advanced-image-carousel.vercel.app/"
    ],
    "github_repo": "https://github.com/NafisMahmudAyon/advanced-image-carousel",
    "downloadable_resources": [],
    "updated_at": "2024-08-31T02:00:45.158",
    "tags": [
      "react",
      "image-carousel",
      "ui-library",
      "web-development",
      "components",
      "responsive",
      "autoplay",
      "pagination",
      "customization"
    ],
    "views_count": null,
    "likes": null,
    "comments": null,
    "description": [
      "Advanced Image Carousel is a React component that offers customizable and responsive image carousel functionality.",
      "It allows developers to easily integrate image sliders with various configuration options like autoplay",
      "pagination",
      "drag",
      "and responsive breakpoints.",
      "The component is optimized for performance and can be tailored to fit specific design needs",
      "making it a versatile addition to any project."
    ]
  }
]